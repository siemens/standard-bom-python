# SPDX-FileCopyrightText: Copyright (c) Siemens AG 2019-2025 ALL RIGHTS RESERVED
# SPDX-License-Identifier: MIT

on:
    workflow_call

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            -   name: Install Poetry
                run: |
                    pipx install poetry
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v4
                with:
                    python-version: ${{ matrix.python-version }}
                    cache: poetry
                    cache-dependency-path: poetry.lock
            -   name: Set Poetry environment
                run: |
                    poetry env use ${{ matrix.python-version }}
            -   name: Install dependencies
                run: |
                    poetry install --no-root
            -   name: Run the automated tests
                run: |
                    poetry build
            -   name: Upload pytest test results
                uses: actions/upload-artifact@v4
                with:
                    name: build-${{ matrix.python-version }}
                    path: |
                        dist/*.whl
                        dist/*.tar.gz

    tests:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        strategy:
            matrix:
                python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            -   name: Install Poetry
                run: |
                    pipx install poetry
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v4
                with:
                    python-version: ${{ matrix.python-version }}
                    cache: poetry
                    cache-dependency-path: poetry.lock
            -   name: Set Poetry environment
                run: |
                    poetry env use ${{ matrix.python-version }}
            -   name: Install dependencies
                run: |
                    poetry install --no-root
            -   name: Run the automated tests
                run: |
                    poetry run tox run -e ${{ matrix.python-version }}
            -   name: Upload pytest test results
                uses: actions/upload-artifact@v4
                with:
                    name: pytest-results-${{ matrix.python-version }}
                    path: coverage.xml

    lint:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            -   name: Install Poetry
                run: |
                    pipx install poetry
            -   name: Set up Python
                uses: actions/setup-python@v4
                with:
                    python-version: '3.12'
                    cache: poetry
                    cache-dependency-path: poetry.lock
            -   name: Set Poetry environment
                run: |
                    poetry env use 3.12
            -   name: Install dependencies
                run: |
                    poetry install --no-root
            -   name: Run the linting
                run: |
                    poetry run tox run -e lint,type
